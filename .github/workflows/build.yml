name: Publish savanna-antelope

on:
  push:
    branches: ["main"]
    # Publish semver tags as releases.
    tags: ["*"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  CDT_VERSION: "v4.1.0"
  SPRING_VERSION: "v1.0.3"
  CONTRACT_VERSION: "v3.6.0"

jobs:
  build-cdt:
    runs-on: macos-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew update
          brew install llvm@12
          brew install gcc@11
          echo 'export PATH="/usr/local/opt/llvm@12/bin:$PATH"' >> $GITHUB_ENV

      - name: Clone & build spring
        run: |
          git clone -b release/1.0 --single-branch https://github.com/AntelopeIO/spring.git
          cd spring
          git checkout ${{ env.SPRING_VERSION }}
          git pull origin ${{ env.SPRING_VERSION }}
          git submodule update --init --recursive

          mkdir -p spring_build/packages
          cd spring_build
          echo "BUILDING SPRING FROM v1.0.3"
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/usr/local/opt/llvm@12 ../
          echo "FINISHED CMAKE SPRING"
          make -j 3 package
          echo "FINISHED BUILDING SPRING"

          # Export spring_DIR for later use
          echo "spring_DIR=$(pwd)/lib/cmake/spring" >> $GITHUB_ENV

      - name: Clone & build cdt
        run: |
          git clone -b release/4.1 --single-branch https://github.com/AntelopeIO/cdt.git
          cd cdt
          git checkout ${{ env.CDT_VERSION }}
          git pull origin ${{ env.CDT_VERSION }}
          git submodule update --init --recursive
          mkdir build
          cd build
          cmake ..
          make -j 3
          cd packages
          chmod -R +x .
          ./generate_package.sh brew mac-cdt-${{ env.CDT_VERSION }} arm64

      - name: Clone & build eos-system-contract
        run: |
          git clone https://github.com/AntelopeIO/reference-contracts.git
          git clone https://github.com/eosnetworkfoundation/eos-system-contracts.git
          cd eos-system-contracts
          git checkout ${{ env.CONTRACT_VERSION }}
          git pull origin ${{ env.CONTRACT_VERSION }}
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -Dspring_DIR=${{ env.spring_DIR }} ..
          make -j 3

      - name: Clone & build eosio-time
        run: |
          git clone https://github.com/eosnetworkfoundation/eosio.time.git
          cd eosio.time
          cdt-cpp eosio.time.cpp

      - name: Copy output
        run: |
          mkdir -p output  # Ensure output directory exists
          mv ../spring/spring_build/antelope-spring_*.deb output/
          mv ../cdt/build/tools/bin/* output/
          mv ../cdt/build/packages/cdt_*_amd64.deb output/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-artifacts
          path: output/*
