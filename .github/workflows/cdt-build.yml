name: build cdt

on:
  push:
    branches: ["main"]
    # Publish semver tags as releases.
    tags: ["*"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  CDT_VERSION: "v4.1.0"
  SPRING_VERSION: "v1.0.3"
  CONTRACT_VERSION: "v3.6.0"

jobs:
  build-cdt:
    runs-on: macos-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true  # Checkout submodules

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            spring_build/packages
            cdt/build/packages
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}-${{ env.CDT_VERSION }}-${{ env.SPRING_VERSION }}

      - name: Install dependencies
        run: |
          brew update
          brew tap huangyangcong/llvm
          brew install huangyangcong/llvm/llvm@11 cmake gcc@11 wget gmp automake libtool boost doxygen pyenv binutils
          echo 'export PATH="/usr/local/opt/llvm@11/bin:$PATH"' >> $GITHUB_ENV
          echo 'export PATH="/usr/local/opt/gcc@11/bin:$PATH"' >> $GITHUB_ENV

      - name: Clone & build cdt
        run: |
          git clone -b release/4.1 --single-branch https://github.com/AntelopeIO/cdt.git
          cd cdt
          git checkout ${{ env.CDT_VERSION }}
          git pull origin ${{ env.CDT_VERSION }}
          git submodule update --init --recursive
          mkdir build
          cd build
	  echo 'export cdt_BUILD_DIR="$(pwd)"' >> $GITHUB_ENV
          echo 'export cdt_DIR="$(pwd)/lib/cmake/cdt"' >> $GITHUB_ENV
          cmake ..
          make -j $(sysctl -n hw.ncpu)
          cd packages
          chmod -R +x .
          ./generate_package.sh brew mac-cdt-${{ env.CDT_VERSION }} arm64
		  
      - name: Clone & build eos-system-contract
        run: |
          git clone https://github.com/eosnetworkfoundation/eos-system-contracts.git
          cd eos-system-contracts
          git checkout ${{ env.CONTRACT_VERSION }}
          git pull origin ${{ env.CONTRACT_VERSION }}
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=OFF -Dcdt_DIR=${{ env.cdt_DIR}} ..
          make -j $(sysctl -n hw.ncpu)

      - name: Clone & build eosio-time
        run: |
          git clone https://github.com/eosnetworkfoundation/eosio.time.git
          cd eosio.time
          cdt-cpp eosio.time.cpp

      - name: Copy output
        run: |
          mkdir -p output  # Ensure output directory exists
          mv ${{ env.cdt_BUILD_DIR }}/tools/bin/* output/
          mv ${{ env.cdt_BUILD_DIR }}/packages/*.deb output/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-artifacts
          path: output/*
