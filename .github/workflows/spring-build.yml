name: build spring

on:
  push:
    branches: ["main"]
    # Publish semver tags as releases.
    tags: ["*"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  CDT_VERSION: "v4.1.0"
  SPRING_VERSION: "v1.0.3"

jobs:
  build-cdt:
    runs-on: macos-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true  # Checkout submodules

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            spring_build/packages
            cdt/build/packages
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}-${{ env.CDT_VERSION }}-${{ env.SPRING_VERSION }}

      - name: Install dependencies
        run: |
          brew update
          brew tap huangyangcong/llvm
          brew install huangyangcong/llvm/llvm@11 cmake gcc@11 wget gmp automake libtool boost doxygen pyenv binutils
          echo "LDFLAGS=-L/usr/local/opt/llvm@11/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I/usr/local/opt/llvm@11/include" >> $GITHUB_ENV
          export CXX="/usr/local/opt/gcc@11/bin/g++-11"
          export CC="/usr/local/opt/gcc@11/bin/gcc-11"

      - name: Clone & build spring
        run: |
          git clone -b release/1.0 --single-branch https://github.com/AntelopeIO/spring.git
          cd spring
          git checkout ${{ env.SPRING_VERSION }}
          git pull origin ${{ env.SPRING_VERSION }}
          git submodule update --init --recursive

          mkdir -p spring_build/packages
          cd spring_build
          echo "BUILDING SPRING FROM v1.0.3"
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="/usr/local/opt/llvm@11;/usr/local/opt/gcc@11" ../
          echo "FINISHED CMAKE SPRING"
          make -j $(sysctl -n hw.ncpu) package
          echo "FINISHED BUILDING SPRING"

          # Export spring_DIR for later use
          echo "spring_DIR=$(pwd)/lib/cmake/spring" >> $GITHUB_ENV

      - name: Copy output
        run: |
          mkdir -p output
          mv ${{ env.spring_DIR }}/*.deb output/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-artifacts
          path: output/*
